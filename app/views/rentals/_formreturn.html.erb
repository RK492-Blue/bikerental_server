<% if @current_user.nil? %>
    <h2>Please Sign-in to hire a bike!</h2>
    <% elsif @current_user.present? %>
        <%= form_with(model: rental, local: true) do |formreturn| %>
        <% if rental.errors.any? %>
          <div id="error_explanation">
            <h2><%= pluralize(rental.errors.count, "error") %> prohibited this rental from being saved:</h2>

            <ul>
            <% rental.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
            </ul>
          </div>
        <% end %>



        <div class="field">
          <%= formreturn.label :end_stand_id %>
          <%= formreturn.select :end_stand_id, Bikestand.pluck(:location,:id), {:include_blank => '<----- Select Bikestand ----->'},:required =>true%>
        </div>


        <div class="field hidden">
          <%= formreturn.label :start_time%>
          <%= formreturn.text_field :start_time, id: :rental_start_time,:required =>true %>
        </div>


        <!-- <div class="field">
          <%= formreturn.label :end_time%>
          <%= formreturn.text_field :end_time, id: :rental_end_time,:required =>true %>
        </div> -->

        <div class="field">
          <%= formreturn.label :cost %>
          <%#= formreturn.number_field :cost, id: :rental_cost %>
<!--
          <%== rental.start_time %>
          <%= Time.now %>
-->
          <%= number_to_currency( ((Time.now - rental.start_time) / 60 / 60) * 2)  %>

        </div>




        <div class="actions">
          <%= formreturn.submit "Return Bike" %>
        </div>
        <% end %>
<% end %>

<!--  *********************************************** -->
<%= content_tag :div, id: "map", data: {location: @bikestands} do %>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB7nJABK2HEiQKo4V-FCEMWX5xag8vVJeA&callback=mapLocation">
</script>

<script>

let bikestand = {lat: -33.87, lng: 151.20}

let map;
// let ipAddress = '<%=  request.remote_ip %>'
function mapLocation(locationID) {
  if (locationID)
  console.log('maplocation', locationID);
  let locationList = $('#map').data('location')
  console.log(locationList);

  // If we have a locationID, make that the new center of the map.
  let selectedStand;
  if (locationID) {
    // TODO: use _.findBy instead of this loop
    for (let i=0; i < locationList.length; i++) {
      if (+locationID === locationList[i].id) {
        selectedStand = locationList[i];
        break;
      }
    }
    bikestand.lat = +selectedStand.latitude;
    bikestand.lng = +selectedStand.longitude;
  }
  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: bikestand.lat, lng: bikestand.lng},
    zoom: 13,
    styles:
      [
    {
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#ebe3cd"
        }
      ]
    },
    {
      "elementType": "labels.text.fill",
      "stylers": [
        {
          "color": "#523735"
        }
      ]
    },
    {
      "elementType": "labels.text.stroke",
      "stylers": [
        {
          "color": "#f5f1e6"
        }
      ]
    },
    {
      "featureType": "administrative",
      "elementType": "geometry.stroke",
      "stylers": [
        {
          "color": "#c9b2a6"
        }
      ]
    },
    {
      "featureType": "administrative.land_parcel",
      "elementType": "geometry.stroke",
      "stylers": [
        {
          "color": "#dcd2be"
        }
      ]
    },
    {
      "featureType": "administrative.land_parcel",
      "elementType": "labels",
      "stylers": [
        {
          "visibility": "off"
        }
      ]
    },
    {
      "featureType": "administrative.land_parcel",
      "elementType": "labels.text.fill",
      "stylers": [
        {
          "color": "#ae9e90"
        }
      ]
    },
    {
      "featureType": "landscape.natural",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#dfd2ae"
        }
      ]
    },
    {
      "featureType": "poi",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#dfd2ae"
        }
      ]
    },
    {
      "featureType": "poi",
      "elementType": "labels.text",
      "stylers": [
        {
          "visibility": "off"
        }
      ]
    },
    {
      "featureType": "poi",
      "elementType": "labels.text.fill",
      "stylers": [
        {
          "color": "#93817c"
        }
      ]
    },
    {
      "featureType": "poi.business",
      "stylers": [
        {
          "visibility": "off"
        }
      ]
    },
    {
      "featureType": "poi.park",
      "elementType": "geometry.fill",
      "stylers": [
        {
          "color": "#a5b076"
        }
      ]
    },
    {
      "featureType": "poi.park",
      "elementType": "labels.text",
      "stylers": [
        {
          "visibility": "off"
        }
      ]
    },
    {
      "featureType": "poi.park",
      "elementType": "labels.text.fill",
      "stylers": [
        {
          "color": "#447530"
        }
      ]
    },
    {
      "featureType": "road",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#f5f1e6"
        }
      ]
    },
    {
      "featureType": "road.arterial",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#fdfcf8"
        }
      ]
    },
    {
      "featureType": "road.highway",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#f8c967"
        }
      ]
    },
    {
      "featureType": "road.highway",
      "elementType": "geometry.stroke",
      "stylers": [
        {
          "color": "#e9bc62"
        }
      ]
    },
    {
      "featureType": "road.highway.controlled_access",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#e98d58"
        }
      ]
    },
    {
      "featureType": "road.highway.controlled_access",
      "elementType": "geometry.stroke",
      "stylers": [
        {
          "color": "#db8555"
        }
      ]
    },
    {
      "featureType": "road.local",
      "elementType": "labels",
      "stylers": [
        {
          "visibility": "off"
        }
      ]
    },
    {
      "featureType": "road.local",
      "elementType": "labels.text.fill",
      "stylers": [
        {
          "color": "#806b63"
        }
      ]
    },
    {
      "featureType": "transit.line",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#dfd2ae"
        }
      ]
    },
    {
      "featureType": "transit.line",
      "elementType": "labels.text.fill",
      "stylers": [
        {
          "color": "#8f7d77"
        }
      ]
    },
    {
      "featureType": "transit.line",
      "elementType": "labels.text.stroke",
      "stylers": [
        {
          "color": "#ebe3cd"
        }
      ]
    },
    {
      "featureType": "transit.station",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#dfd2ae"
        }
      ]
    },
    {
      "featureType": "water",
      "elementType": "geometry.fill",
      "stylers": [
        {
          "color": "#b9d3c2"
        }
      ]
    },
    {
      "featureType": "water",
      "elementType": "labels.text.fill",
      "stylers": [
        {
          "color": "#92998d"
        }
      ]
    }
  ]

  });
  console.log($('#map').data('location') )
  if (selectedStand) {
    marker = new google.maps.Marker ({
     position: {lat: +selectedStand.latitude, lng: +selectedStand.longitude},
     map: map,
     label: selectedStand.location
   });
   console.log(marker)
  } else {
    for (var i = 0; i < locationList.length; i++) {
      console.log( locationList[i] );
      marker = new google.maps.Marker ({
       position: {lat: +locationList[i].latitude, lng: +locationList[i].longitude},
       map: map,
       // label: locationList[i].location
       title:locationList[i].location

      })
    }
  }
}
$('[name="rental[end_stand_id]"]').on('change', function () {
  const id = $(this).val();
  mapLocation( id )
});
// navigator.geolocation.getCurrentPosition( function(results) {
//   console.log(results.coords.latitude, results.coords.longitude)
//   bikestand = {lat: +results.coords.latitude, lng: +results.coords.longitude}
//   mapLocation()
// })
</script>

<% end %>
<!--  *********************************************** -->
